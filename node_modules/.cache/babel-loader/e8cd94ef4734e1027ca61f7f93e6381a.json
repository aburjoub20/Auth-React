{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\react  Project\\\\hoo\\\\src\\\\components\\\\Register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // API \n\nimport Joi from 'joi'; // for validation\n\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  let [errorList, setErrorList] = useState([]); //front end erorr msg\n\n  let [errorMsg, setErrorMsg] = useState([]); // if you wanna show error from backend\n\n  let [loading, setloading] = useState(false); //for change btn to spinner when submit \n\n  const navigator = useNavigate;\n\n  async function submitform(e) {\n    // alert('test');\n    e.preventDefault();\n    setloading(true);\n    let validateform = validator();\n\n    if (validateform.error) {\n      setErrorList(validateform.error.details); // alert(validateform.error.details);\n\n      setloading(false);\n    } else {\n      //API \n      setloading(true);\n      let {\n        data\n      } = await axios.post('', user);\n\n      if (data.message == 'success') {\n        //login \n        console.log(data);\n        setloading(false);\n      } else {\n        setErrorMsg(data.message);\n      }\n    }\n\n    setloading(false); // console.log(validateform);\n  }\n\n  let [user, setUser] = useState({\n    //useState to show data from console to view \n    first_name: '',\n    last_name: '',\n    email: ''\n  });\n\n  function validator() {\n    const schema = Joi.object({\n      email: Joi.string().required(),\n      first_name: Joi.string().max(3).required(),\n      last_name: Joi.string().required() // Regax code on react Joi\n\n    });\n    return schema.validate(user, {\n      abortEarly: false\n    }); //abortEarly use to check all form not first iteam\n  }\n\n  function getFormvalue(e) {\n    let myUser = { ...user\n    };\n    myUser[e.target.name] = e.target.value; // to get data by name=\"\"\n\n    setUser(myUser);\n    console.log(myUser); // to set copy for parent let \n  }\n\n  function change(e) {\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitform,\n    children: [errorList.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error.message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"first_name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: getFormvalue,\n        type: \"text\",\n        className: \"form-control\",\n        id: \"first_name\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"first_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"last_name\",\n        children: \"last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: getFormvalue,\n        type: \"text\",\n        className: \"form-control\",\n        id: \"last_name\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"last_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Eamil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: getFormvalue,\n        type: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary float-l eft\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 14\n      }, this) : 'register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Register, \"OIIQuky+G1gGqh/dRchpbiU3VXk=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/arjoub/Desktop/react  Project/hoo/src/components/Register/Register.jsx"],"names":["React","useState","axios","Joi","useNavigate","Register","errorList","setErrorList","errorMsg","setErrorMsg","loading","setloading","navigator","submitform","e","preventDefault","validateform","validator","error","details","data","post","user","message","console","log","setUser","first_name","last_name","email","schema","object","string","required","max","validate","abortEarly","getFormvalue","myUser","target","name","value","change","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'; // API \r\nimport Joi from 'joi';// for validation\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function Register() {\r\n  let [errorList , setErrorList]=useState([]); //front end erorr msg\r\n  let [errorMsg , setErrorMsg]=useState([]); // if you wanna show error from backend\r\n  let[loading , setloading]= useState(false);//for change btn to spinner when submit \r\n  const navigator = useNavigate;\r\n async function submitform(e){\r\n    // alert('test');\r\n    e.preventDefault();\r\n    setloading(true);\r\n    let validateform = validator();\r\n    if(validateform.error){\r\n      setErrorList(validateform.error.details);\r\n      // alert(validateform.error.details);\r\n      setloading(false);\r\n    }\r\n    else{\r\n      //API \r\n      setloading(true);\r\n\r\n      let{data} =  await axios.post('',user)\r\n      if(data.message=='success'){\r\n        //login \r\n        console.log(data);\r\n        setloading(false);\r\n\r\n      }\r\n      else{\r\n        setErrorMsg(data.message);\r\n      }\r\n    }    \r\n      setloading(false);\r\n\r\n    // console.log(validateform);\r\n  }\r\n  let [user , setUser]=useState({ //useState to show data from console to view \r\n    first_name:'',\r\n    last_name:'',\r\n    email:'',\r\n  })\r\n\r\nfunction validator(){\r\n  const schema = Joi.object({\r\n    email :Joi.string().required(),\r\n    first_name: Joi.string().max(3).required(),\r\n    last_name: Joi.string().required() // Regax code on react Joi\r\n});\r\nreturn schema.validate(user,{abortEarly:false});//abortEarly use to check all form not first iteam\r\n}\r\nfunction getFormvalue(e){\r\n  let  myUser = {...user};\r\n  myUser[e.target.name]=e.target.value; // to get data by name=\"\"\r\nsetUser(myUser);\r\n\r\n  console.log(myUser); // to set copy for parent let \r\n\r\n}\r\n  function change(e){\r\nconsole.log(e.target.value);\r\n  }\r\n  return (\r\n<form onSubmit={submitform}>\r\n  {errorList.map( (error, index)=>\r\n\r\n  <div key={index} className='alert alert-danger'>{error.message}</div> \r\n  )}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"first_name\">First Name</label>\r\n    \r\n    <input onChange={getFormvalue} type=\"text\" className=\"form-control\" id=\"first_name\" aria-describedby=\"emailHelp\"name='first_name'/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"last_name\">last Name</label>\r\n    <input onChange={getFormvalue} type=\"text\" className=\"form-control\" id=\"last_name\" aria-describedby=\"emailHelp\" name='last_name'/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"email\">Eamil</label>\r\n    <input onChange={getFormvalue} type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"name='email' />\r\n  </div>\r\n  <button type=\"submit\" className=\"btn btn-primary float-l eft\">\r\n    {loading?<i className='fa fa-spinner fa-spin'></i>:'register'}\r\n    </button>\r\n</form>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}