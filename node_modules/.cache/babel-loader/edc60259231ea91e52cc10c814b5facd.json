{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\react  Project\\\\hoo\\\\src\\\\components\\\\Login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios'; // API \n\nimport Joi, { func } from 'joi'; // for validation\n\nimport { useNavigate } from 'react-router-dom'; //to move between components (route)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  let [errorList, setErrorList] = useState([]); //front end erorr msg\n\n  let [errorMsg, setErrorMsg] = useState([]); // if you wanna show error from backend\n\n  let [loading, setloading] = useState(false); //for change btn to spinner when submit \n\n  const navigator = useNavigate();\n\n  function gotohome() {\n    let path = '/Home';\n    navigator(path);\n  }\n\n  async function submitform(e) {\n    // alert('test');\n    e.preventDefault();\n    setloading(true);\n    let validateform = validator();\n\n    if (validateform.error) {\n      setErrorList(validateform.error.details); // alert(validateform.error.details);\n\n      setloading(false);\n    } else {\n      //API \n      setloading(true);\n      gotohome();\n      let {\n        data\n      } = await axios.post('', user);\n\n      if (data.message == 'success') {\n        //login \n        console.log(data);\n        setloading(false);\n      } else {\n        setErrorMsg(data.message);\n      }\n    }\n\n    setloading(false); // console.log(validateform);\n  }\n\n  let [user, setUser] = useState({\n    //useState to show data from console to view \n    password: '',\n    email: ''\n  });\n\n  function validator() {\n    const schema = Joi.object({\n      email: Joi.string().required(),\n      password: Joi.string().required() // Regax code on react Joi\n\n    });\n    return schema.validate(user, {\n      abortEarly: false\n    }); //abortEarly use to check all form not first iteam\n  }\n\n  function getFormvalue(e) {\n    let myUser = { ...user\n    };\n    myUser[e.target.name] = e.target.value; // to get data by name=\"\"\n\n    setUser(myUser);\n    console.log(myUser); // to set copy for parent let \n  }\n\n  function change(e) {\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitform,\n    children: [errorList.map((error, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: error.message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 3\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Eamil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: getFormvalue,\n        type: \"email\",\n        className: \"form-control\",\n        id: \"email\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: getFormvalue,\n        type: \"text\",\n        className: \"form-control\",\n        id: \"password\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary float-l eft\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this) : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Register, \"9mHv4ZCJ+X8i0PBJ62v7SJoZXIs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/arjoub/Desktop/react  Project/hoo/src/components/Login/Login.jsx"],"names":["React","useState","axios","Joi","func","useNavigate","Register","errorList","setErrorList","errorMsg","setErrorMsg","loading","setloading","navigator","gotohome","path","submitform","e","preventDefault","validateform","validator","error","details","data","post","user","message","console","log","setUser","password","email","schema","object","string","required","validate","abortEarly","getFormvalue","myUser","target","name","value","change","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'; // API \r\nimport Joi, { func } from 'joi';// for validation\r\nimport { useNavigate } from 'react-router-dom'; //to move between components (route)\r\n\r\nexport default function Register() {\r\n\r\n  let [errorList , setErrorList]=useState([]); //front end erorr msg\r\n  let [errorMsg , setErrorMsg]=useState([]); // if you wanna show error from backend\r\n  let[loading , setloading]= useState(false);//for change btn to spinner when submit \r\n\r\n  const navigator = useNavigate();\r\n  function   gotohome(){\r\n    let path = '/Home';\r\n    navigator(path);\r\n  }\r\n\r\n async function submitform(e){\r\n    // alert('test');\r\n    e.preventDefault();\r\n    setloading(true);\r\n    let validateform = validator();\r\n    if(validateform.error){\r\n      setErrorList(validateform.error.details);\r\n      // alert(validateform.error.details);\r\n      setloading(false);\r\n    }\r\n    else{\r\n      //API \r\n      setloading(true);\r\n      gotohome();\r\n      let{data} =  await axios.post('',user)\r\n      if(data.message=='success'){\r\n        //login \r\n        console.log(data);\r\n        setloading(false);\r\n\r\n      }\r\n      else{\r\n        setErrorMsg(data.message);\r\n      }\r\n    }    \r\n      setloading(false);\r\n\r\n    // console.log(validateform);\r\n  }\r\n\r\n  let [user , setUser]=useState({ //useState to show data from console to view \r\n    password:'',\r\n    email:'',\r\n  })\r\n\r\nfunction validator(){\r\n  const schema = Joi.object({\r\n    email :Joi.string().required(),\r\n    password: Joi.string().required() // Regax code on react Joi\r\n});\r\nreturn schema.validate(user,{abortEarly:false});//abortEarly use to check all form not first iteam\r\n}\r\nfunction getFormvalue(e){\r\n  let  myUser = {...user};\r\n  myUser[e.target.name]=e.target.value; // to get data by name=\"\"\r\nsetUser(myUser);\r\n\r\n  console.log(myUser); // to set copy for parent let \r\n\r\n}\r\n  function change(e){\r\nconsole.log(e.target.value);\r\n  }\r\n  return (\r\n<form onSubmit={submitform}>\r\n  {errorList.map( (error, index)=>\r\n\r\n  <div key={index} className='alert alert-danger'>{error.message}</div> \r\n  )}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"email\">Eamil</label>\r\n    <input onChange={getFormvalue} type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"name='email' />\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"password\">Password</label>\r\n    <input onChange={getFormvalue} type=\"text\" className=\"form-control\" id=\"password\" aria-describedby=\"emailHelp\" name='password'/>\r\n  </div>\r\n\r\n  <button type=\"submit\" className=\"btn btn-primary float-l eft\">\r\n    {loading?<i className='fa fa-spinner fa-spin'></i>:'Login'}\r\n    </button>\r\n</form>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}