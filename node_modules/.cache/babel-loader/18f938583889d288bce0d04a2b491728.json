{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\react  Project\\\\hoo\\\\src\\\\components\\\\Register\\\\Register.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n/*#__PURE__*/\n_jsxDEV(\"div\", {\n  children: [\"import React, \", '{', \" useState \", '}', \" from 'react' import axios from 'axios'; // API import Joi from 'joi';// for validation export default function Register() \", '{', \"let [errorList , setErrorList]=useState([]); //front end erorr msg let [errorMsg , setErrorMsg]=useState([]); // if you wanna show error from backend let[loading , setloading]= useState(false);//for change btn to spinner when submit async function submitform(e)\", '{', \"// alert('test'); e.preventDefault(); let validateform = validator(); if(validateform.error)\", '{', \"setErrorList(validateform.error.details); // alert(validateform.error.details); setloading(false)\", '}', \"else\", '{', \"//API let\", '{', \"data\", '}', \" =  await axios.post('',user) if(data.message=='success')\", '{', \"//login console.log(data);\", '}', \"else\", '{', \"setErrorMsg(data.message);\", '}', \"// setloading(false);\", '}', \"// console.log(validateform);\", '}', \"let [user , setUser]=useState(\", '{', \" //useState to show data from console to view first_name:'', last_name:'', email:'',\", '}', \") function validator()\", '{', \"const schema = Joi.object(\", '{', \"email :Joi.string().required(), first_name: Joi.string().max(3).required(), last_name: Joi.string().required() // Regax code on react Joi\", '}', \"); return schema.validate(user,\", '{', \"abortEarly:false\", '}', \");//abortEarly use to check all form not first iteam\", '}', \"function getFormvalue(e)\", '{', \"let  myUser = \", '{', \"...user\", '}', \"; myUser[e.target.name]=e.target.value; // to get data by name=\\\"\\\" setUser(myUser); console.log(myUser); // to set copy for parent let\", '}', \"function change(e)\", '{', \"console.log(e.target.value);\", '}', \"return (\", /*#__PURE__*/_jsxDEV(\"form\", {\n    onsubmit: \"{submitform}\",\n    children: ['{', \"errorList.map( (error, index)=>\", /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"alert alert-danger\",\n      children: ['{', \"error.message\", '}']\n    }, \"{index}\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), \")\", '}', /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlfor: \"first_name\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onchange: \"{getFormvalue}\",\n        type: \"text\",\n        classname: \"form-control\",\n        id: \"first_name\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"first_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlfor: \"last_name\",\n        children: \"last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onchange: \"{getFormvalue}\",\n        type: \"text\",\n        classname: \"form-control\",\n        id: \"last_name\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"last_name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlfor: \"email\",\n        children: \"Eamil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onchange: \"{getFormvalue}\",\n        type: \"email\",\n        classname: \"form-control\",\n        id: \"email\",\n        \"aria-describedby\": \"emailHelp\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      classname: \"btn btn-primary float-l eft\",\n      children: ['{', \"loading?\", /*#__PURE__*/_jsxDEV(\"i\", {\n        classname: \"fa fa-spinner fa-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 20\n      }, this), \":'register'\", '}']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this), \")\", '}']\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 1,\n  columnNumber: 1\n}, this);","map":{"version":3,"sources":["C:/Users/arjoub/Desktop/react  Project/hoo/src/components/Register/Register.jsx"],"names":[],"mappings":";;;AAAA;AAAA;AAAA,+BACiB,GADjB,gBACgC,GADhC,iIAIsC,GAJtC,2QAQ+B,GAR/B,kGAYyB,GAZzB,uGAgBG,GAhBH,UAiBO,GAjBP,eAmBM,GAnBN,UAmBe,GAnBf,+DAoB8B,GApB9B,gCAuBG,GAvBH,UAwBO,GAxBP,gCA0BG,GA1BH,2BA4BG,GA5BH,mCA8BG,GA9BH,oCA+BiC,GA/BjC,0FAmCG,GAnCH,4BAoCuB,GApCvB,gCAqC6B,GArC7B,+IAyCG,GAzCH,qCA0C+B,GA1C/B,sBA0CoD,GA1CpD,0DA2CG,GA3CH,8BA4C2B,GA5C3B,oBA6CiB,GA7CjB,aA6C6B,GA7C7B,6IAiDG,GAjDH,wBAkDqB,GAlDrB,kCAoDG,GApDH,2BAsDE;AAAM,IAAA,QAAQ,EAAC,cAAf;AAAA,eACG,GADH,kDAEE;AAAmB,MAAA,SAAS,EAAC,oBAA7B;AAAA,iBAAmD,GAAnD,mBAAqE,GAArE;AAAA,OAAS,SAAT;AAAA;AAAA;AAAA;AAAA,YAFF,OAGI,GAHJ,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAC,gBAAhB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,SAAS,EAAC,cAAvD;AAAsE,QAAA,EAAE,EAAC,YAAzE;AAAsF,4BAAiB,WAAvG;AAAmH,QAAA,IAAI,EAAC;AAAxH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAC,gBAAhB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,SAAS,EAAC,cAAvD;AAAsE,QAAA,EAAE,EAAC,WAAzE;AAAqF,4BAAiB,WAAtG;AAAkH,QAAA,IAAI,EAAC;AAAvH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAYE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,QAAQ,EAAC,gBAAhB;AAAiC,QAAA,IAAI,EAAC,OAAtC;AAA8C,QAAA,SAAS,EAAC,cAAxD;AAAuE,QAAA,EAAE,EAAC,OAA1E;AAAkF,4BAAiB,WAAnG;AAA+G,QAAA,IAAI,EAAC;AAApH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAgBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,6BAAhC;AAAA,iBACG,GADH,2BACe;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADf,iBACkE,GADlE;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAtDF,OA2EG,GA3EH;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["<div>\r\n  import React, {'{'} useState {'}'} from 'react'\r\n  import axios from 'axios'; // API \r\n  import Joi from 'joi';// for validation\r\n  export default function Register() {'{'}\r\n  let [errorList , setErrorList]=useState([]); //front end erorr msg\r\n  let [errorMsg , setErrorMsg]=useState([]); // if you wanna show error from backend\r\n  let[loading , setloading]= useState(false);//for change btn to spinner when submit \r\n  async function submitform(e){'{'}\r\n  // alert('test');\r\n  e.preventDefault();\r\n  let validateform = validator();\r\n  if(validateform.error){'{'}\r\n  setErrorList(validateform.error.details);\r\n  // alert(validateform.error.details);\r\n  setloading(false)\r\n  {'}'}\r\n  else{'{'}\r\n  //API \r\n  let{'{'}data{'}'} =  await axios.post('',user)\r\n  if(data.message=='success'){'{'}\r\n  //login \r\n  console.log(data);\r\n  {'}'}\r\n  else{'{'}\r\n  setErrorMsg(data.message);\r\n  {'}'}\r\n  // setloading(false);\r\n  {'}'}\r\n  // console.log(validateform);\r\n  {'}'}\r\n  let [user , setUser]=useState({'{'} //useState to show data from console to view \r\n  first_name:'',\r\n  last_name:'',\r\n  email:'',\r\n  {'}'})\r\n  function validator(){'{'}\r\n  const schema = Joi.object({'{'}\r\n  email :Joi.string().required(),\r\n  first_name: Joi.string().max(3).required(),\r\n  last_name: Joi.string().required() // Regax code on react Joi\r\n  {'}'});\r\n  return schema.validate(user,{'{'}abortEarly:false{'}'});//abortEarly use to check all form not first iteam\r\n  {'}'}\r\n  function getFormvalue(e){'{'}\r\n  let  myUser = {'{'}...user{'}'};\r\n  myUser[e.target.name]=e.target.value; // to get data by name=\"\"\r\n  setUser(myUser);\r\n  console.log(myUser); // to set copy for parent let \r\n  {'}'}\r\n  function change(e){'{'}\r\n  console.log(e.target.value);\r\n  {'}'}\r\n  return (\r\n  <form onsubmit=\"{submitform}\">\r\n    {'{'}errorList.map( (error, index)=&gt;\r\n    <div key=\"{index}\" classname=\"alert alert-danger\">{'{'}error.message{'}'}</div> \r\n    ){'}'}\r\n    <div classname=\"form-group\">\r\n      <label htmlfor=\"first_name\">First Name</label>\r\n      <input onchange=\"{getFormvalue}\" type=\"text\" classname=\"form-control\" id=\"first_name\" aria-describedby=\"emailHelp\" name=\"first_name\" />\r\n    </div>\r\n    <div classname=\"form-group\">\r\n      <label htmlfor=\"last_name\">last Name</label>\r\n      <input onchange=\"{getFormvalue}\" type=\"text\" classname=\"form-control\" id=\"last_name\" aria-describedby=\"emailHelp\" name=\"last_name\" />\r\n    </div>\r\n    <div classname=\"form-group\">\r\n      <label htmlfor=\"email\">Eamil</label>\r\n      <input onchange=\"{getFormvalue}\" type=\"email\" classname=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" name=\"email\" />\r\n    </div>\r\n    <button type=\"submit\" classname=\"btn btn-primary float-l eft\">\r\n      {'{'}loading?<i classname=\"fa fa-spinner fa-spin\" />:'register'{'}'}\r\n    </button>\r\n  </form>\r\n  )\r\n  {'}'}\r\n</div>\r\n"]},"metadata":{},"sourceType":"module"}