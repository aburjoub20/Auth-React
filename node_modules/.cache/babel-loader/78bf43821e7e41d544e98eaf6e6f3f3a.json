{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\Personal files\\\\react  Project\\\\hoo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\Personal files\\\\react  Project\\\\hoo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\Personal files\\\\react  Project\\\\hoo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\Personal files\\\\react  Project\\\\hoo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\arjoub\\\\Desktop\\\\Personal files\\\\react  Project\\\\hoo\\\\src\\\\components\\\\Register\\\\Register.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios'; // API \n\nimport Joi, { func } from 'joi'; // for validation\n\nimport { useNavigate } from 'react-router-dom'; //to move between components (route) \n\nexport default function Register() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      errorList = _useState2[0],\n      setErrorList = _useState2[1]; //front end erorr msg\n\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMsg = _useState4[0],\n      setErrorMsg = _useState4[1]; // if you wanna show error from backend\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setloading = _useState6[1]; //for change btn to spinner when submit \n\n\n  var navigator = useNavigate();\n\n  function gotologin() {\n    var path = '/login';\n    navigator(path);\n  }\n\n  function submitform(_x) {\n    return _submitform.apply(this, arguments);\n  }\n\n  function _submitform() {\n    _submitform = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var validateform, _yield$axios$post, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // alert('test');\n              e.preventDefault();\n              setloading(true);\n              validateform = validator();\n\n              if (!validateform.error) {\n                _context.next = 8;\n                break;\n              }\n\n              setErrorList(validateform.error.details); // alert(validateform.error.details);\n\n              setloading(false);\n              _context.next = 15;\n              break;\n\n            case 8:\n              //API \n              setloading(true);\n              gotologin();\n              _context.next = 12;\n              return axios.post('', user);\n\n            case 12:\n              _yield$axios$post = _context.sent;\n              data = _yield$axios$post.data;\n\n              if (data.message == 'success') {\n                //login \n                console.log(data);\n                setloading(false);\n              } else {\n                setErrorMsg(data.message);\n              }\n\n            case 15:\n              setloading(false); // console.log(validateform);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submitform.apply(this, arguments);\n  }\n\n  var _useState7 = useState({\n    //useState to show data from console to view \n    first_name: '',\n    password: '',\n    email: ''\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      user = _useState8[0],\n      setUser = _useState8[1];\n\n  function validator() {\n    var schema = Joi.object({\n      email: Joi.string().required(),\n      first_name: Joi.string().max(3).required(),\n      password: Joi.string().required() // Regax code on react Joi\n\n    });\n    return schema.validate(user, {\n      abortEarly: false\n    }); //abortEarly use to check all form not first iteam \n    //JOI by default of have any error in iput with stop chaek inputs feilds so i use abortEarly and set fules to check \n  }\n\n  function getFormvalue(e) {\n    var myUser = _objectSpread({}, user); // deep copy get a copy for elemnt \n\n\n    myUser[e.target.name] = e.target.value; // to get data by name=\"\"\n\n    setUser(myUser);\n    console.log(myUser); // to set copy for parent let \n  }\n\n  function change(e) {\n    console.log(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitform,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 1\n    }\n  }, errorList.map(function (error, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      className: \"alert alert-danger\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }\n    }, error.message);\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: getFormvalue,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"first_name\",\n    \"aria-describedby\": \"emailHelp\",\n    name: \"first_name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: getFormvalue,\n    type: \"text\",\n    className: \"form-control\",\n    id: \"password\",\n    \"aria-describedby\": \"emailHelp\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, \"Eamil\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: getFormvalue,\n    type: \"email\",\n    className: \"form-control\",\n    id: \"email\",\n    \"aria-describedby\": \"emailHelp\",\n    name: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary float-l eft\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, loading ? /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-spinner fa-spin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 14\n    }\n  }) : 'register'));\n}","map":{"version":3,"sources":["C:/Users/arjoub/Desktop/Personal files/react  Project/hoo/src/components/Register/Register.jsx"],"names":["React","useState","axios","Joi","func","useNavigate","Register","errorList","setErrorList","errorMsg","setErrorMsg","loading","setloading","navigator","gotologin","path","submitform","e","preventDefault","validateform","validator","error","details","post","user","data","message","console","log","first_name","password","email","setUser","schema","object","string","required","max","validate","abortEarly","getFormvalue","myUser","target","name","value","change","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport axios from 'axios'; // API \r\nimport Joi, { func } from 'joi';// for validation\r\nimport { useNavigate } from 'react-router-dom'; //to move between components (route) \r\n\r\nexport default function Register() {\r\n  let [errorList , setErrorList]=useState([]); //front end erorr msg\r\n  let [errorMsg , setErrorMsg]=useState([]); // if you wanna show error from backend\r\n  let[loading , setloading]= useState(false);//for change btn to spinner when submit \r\n  const navigator = useNavigate();\r\n  function gotologin (){\r\n    let path = '/login';\r\n    navigator(path);\r\n  }\r\n\r\n async function submitform(e){\r\n    // alert('test');\r\n    e.preventDefault();\r\n    setloading(true);\r\n    let validateform = validator();\r\n    if(validateform.error){\r\n      setErrorList(validateform.error.details);\r\n      // alert(validateform.error.details);\r\n      setloading(false);\r\n    }\r\n    else{\r\n      //API \r\n      setloading(true);\r\n      gotologin();\r\n      let{data} =  await axios.post('',user)\r\n      if(data.message=='success'){\r\n        //login \r\n        console.log(data);\r\n        setloading(false);\r\n      }\r\n      else{\r\n        setErrorMsg(data.message);\r\n      }\r\n    }    \r\n      setloading(false);\r\n    // console.log(validateform);\r\n  }\r\n\r\n\r\n  let [user , setUser]=useState({ //useState to show data from console to view \r\n    first_name:'',\r\n    password:'',\r\n    email:'',\r\n  })\r\n\r\n\r\n\r\nfunction validator(){\r\n  const schema = Joi.object({\r\n    email :Joi.string().required(),\r\n    first_name: Joi.string().max(3).required(),\r\n    password: Joi.string().required() // Regax code on react Joi\r\n});\r\nreturn schema.validate(user,{abortEarly:false});//abortEarly use to check all form not first iteam \r\n//JOI by default of have any error in iput with stop chaek inputs feilds so i use abortEarly and set fules to check \r\n}\r\nfunction getFormvalue(e){\r\n  let  myUser = {...user}; // deep copy get a copy for elemnt \r\n  myUser[e.target.name]=e.target.value; // to get data by name=\"\"\r\nsetUser(myUser);\r\n  console.log(myUser); // to set copy for parent let \r\n}\r\n  function change(e){\r\nconsole.log(e.target.value);\r\n  }\r\n  return (\r\n<form onSubmit={submitform}>\r\n  {errorList.map( (error, index)=>\r\n  <div key={index} className='alert alert-danger'>{error.message}</div> \r\n  )}\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"first_name\">First Name</label>\r\n    <input onChange={getFormvalue} type=\"text\" className=\"form-control\" id=\"first_name\" aria-describedby=\"emailHelp\"name='first_name'/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"password\">Password</label>\r\n    <input onChange={getFormvalue} type=\"text\" className=\"form-control\" id=\"password\" aria-describedby=\"emailHelp\" name='password'/>\r\n  </div>\r\n  <div className=\"form-group\">\r\n    <label htmlFor=\"email\">Eamil</label>\r\n    <input onChange={getFormvalue} type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\"name='email' />\r\n  </div>\r\n  <button type=\"submit\" className=\"btn btn-primary float-l eft\">\r\n    {loading?<i className='fa fa-spinner fa-spin'></i>:'register'}\r\n    </button>\r\n</form>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}